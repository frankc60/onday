/**
 * onday v.2.4.51
 * Â©2020 ISC
 * frankc60@gmail.com 
 * git+https://github.com/frankc60/onday.git
 * Build time: 06-Dec-2020 14:14:39
 */
const e=require("http");class t{static _PRV_NOW_MONTH=(new Date).getMonth()+1;static _PRV_NOW_DAY=(new Date).getDate();static _PRV_NOW_YEAR=(new Date).getFullYear();constructor(e,r){this.d=!0===t.dateCheck(t._PRV_NOW_YEAR,r,e)?e:t._PRV_NOW_DAY,this.m=!0===t.dateCheck(t._PRV_NOW_YEAR,r,e)?r:t._PRV_NOW_MONTH,this.months={1:["Jan","January"],2:["Feb","February"],3:["Mar","March"],4:["Apr","April"],5:["May","May"],6:["Jun","June"],7:["Jul","July"],8:["Aug","August"],9:["Sep","September"],10:["Oct","October"],11:["Nov","November"],12:["Dec","December"]}}init(e,r){console.log(`init: datecheck returns: ${t.dateCheck(t._PRV_NOW_YEAR,r,e)} - this.d = ${this.d}, this.m = ${this.m}
onday._PRV_NOW_DAY = ${t._PRV_NOW_DAY}`)}static dateCheck=(e,t,r)=>{const a=new Date(e,+t-1,r);return 1==(Boolean(+a)&&a.getDate()==r&&t>0&&t<13)};getdate(e=this.d,r=this.m){return new Promise(((a,s)=>{if(t.dateCheck(t._PRV_NOW_YEAR,r,e)){let t;switch(e.toString().charAt(e.toString().length-1)){case"1":t="st";break;case"2":t="nd";break;case"3":t="rd";break;default:t="th"}a(`${e}${t} ${this.months[r][0]}`)}else s(`Date is invalid: ${e}-${r}-${t._PRV_NOW_YEAR}`)}))}check(r=this.d,a=this.m,s){return new Promise(((n,i)=>{t.dateCheck(t._PRV_NOW_YEAR,a,r)?s?setTimeout((function(e){n(`On ${e[a][0]} ${r} is the day something in history happened - mock data.`)}),1e3,this.months):e.get(`http://numbersapi.com/${a}/${r}/date`,(e=>{let t="";e.on("data",(e=>{t+=e})),e.on("end",(()=>{/title\>Error/.test(t)?i(`Error 3:  eee ddd
              test
              test2
              test3 ${t}`):n(t)})),e.on("error",(e=>{i("Error 1:  "+e)}))})).on("error",(e=>{i("Error 2: "+e.message)})):i(`Error: invalid date values (${r}, ${a})`)}))}}module.exports=t;
