/**
 * onday v.2.4.15
 * Â©2020
 * git+https://github.com/frankc60/onday.git
 * Build time: 22-Nov-2020 21:46:52
 */
const e=require("http");class onday{static _PRV_NOW_MONTH=(new Date).getMonth()+1;static _PRV_NOW_DAY=(new Date).getDate();constructor(e=onday._PRV_NOW_DAY,t=onday._PRV_NOW_MONTH){this.d=e,this.m=t,this.months={1:"Jan",2:"Feb",3:"Mar",4:"Apr",5:"May",6:"Jun",7:"Jul",8:"Aug",9:"Sep",10:"Oct",11:"Nov",12:"Dec"}}doy(e=onday._PRV_NOW_DAY,t=onday._PRV_NOW_MONTH){return new Promise((async(r,o)=>{try{const o=new Date;console.log(e,t);const n=new Date(o.getFullYear(),t-1,e,1,0,1,0);r([await Math.ceil((n-new Date(n.getFullYear(),0,1))/864e5),n])}catch(e){o(`Error 3: ${e}`)}}))}check(t=this.d,r=this.m){return new Promise(((o,n)=>{e.get(`http://numbersapi.com/${r}/${t}/date`,(e=>{let t="";e.on("data",(e=>{t+=e})),e.on("end",(()=>{o(t)})),e.on("error",(e=>{n("Error 1:"+e)}))})).on("error",(e=>{n("Error 2: "+e.message)}))}))}}module.exports=onday;
