/**
 * onday v.2.4.47
 * Â©2020 ISC
 * frankc60@gmail.com 
 * git+https://github.com/frankc60/onday.git
 * Build time: 27-Nov-2020 20:42:43
 */
const t=require("http");class e{static _PRV_NOW_MONTH=(new Date).getMonth()+1;static _PRV_NOW_DAY=(new Date).getDate();static _PRV_NOW_YEAR=(new Date).getFullYear();constructor(t,r){this.d=e.dateCheck(e._PRV_NOW_YEAR,r,t)?t:e._PRV_NOW_DAY,this.m=e.dateCheck(e._PRV_NOW_YEAR,r,t)?r:e._PRV_NOW_MONTH,this.months={1:"Jan",2:"Feb",3:"Mar",4:"Apr",5:"May",6:"Jun",7:"Jul",8:"Aug",9:"Sep",10:"Oct",11:"Nov",12:"Dec"}}static dateCheck=(t,e,r)=>{const a=new Date(t,+e-1,r);return Boolean(+a)&&a.getDate()==r};check(r=this.d,a=this.m,n){return new Promise(((s,o)=>{e.dateCheck(e._PRV_NOW_YEAR,a,r)?n?setTimeout((function(t){s(`On ${t[a]} ${r} is the day something in history happened - mock data.`)}),1e3,this.months):t.get(`http://numbersapi.com/${a}/${r}/date`,(t=>{let e="";t.on("data",(t=>{e+=t})),t.on("end",(()=>{/title\>Error/.test(e)?o(`Error 3:  eee ddd
              test
              test2
              test3 ${e}`):s(e)})),t.on("error",(t=>{o("Error 1:  "+t)}))})).on("error",(t=>{o("Error 2: "+t.message)})):o(`Error: invalid date values (${r}, ${a})`)}))}}module.exports=e;
