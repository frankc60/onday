/**
 * onday v.2.4.14
 * Â©2020
 * git+https://github.com/frankc60/onday.git
 * Build time: 22-Nov-2020 21:42:47
 */
const t=require("http");class onday{static _PRV_NOW_MONTH=(new Date).getMonth()+1;static _PRV_NOW_DAY=(new Date).getDate();constructor(t=onday._PRV_NOW_DAY,e=onday._PRV_NOW_MONTH){this.d=t,this.m=e,this.months={1:"Jan",2:"Feb",3:"Mar",4:"Apr",5:"May",6:"Jun",7:"Jul",8:"Aug",9:"Sep",10:"Oct",11:"Nov",12:"Dec"}}doy(t=onday._PRV_NOW_DAY,e=onday._PRV_NOW_MONTH){return new Promise((async(r,o)=>{try{const o=new Date;console.log(t,e);const n=new Date(o.getFullYear(),e-1,t,1,0,1,0);r([await Math.ceil((n-new Date(n.getFullYear(),0,1))/864e5),n])}catch(t){o(`Error 3: ${t}`)}}))}check(e=this.d,r=this.m){return new Promise(((o,n)=>{t.get(`http://numbersapi.com/${r}/${e}/date`,(t=>{let a="";t.on("data",(t=>{a+=t})),t.on("end",(()=>{o([a,[e,this.months[r]]])})),t.on("error",(t=>{n("Error 1:"+t)}))})).on("error",(t=>{n("Error 2: "+t.message)}))}))}}module.exports=onday;
