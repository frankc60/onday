/**
 * onday v.2.4.37
 * Â©2020 ISC
 * frankc60@gmail.com 
 * git+https://github.com/frankc60/onday.git
 * Build time: 24-Nov-2020 17:23:19
 */
const e=require("http");class onday{static _PRV_NOW_MONTH=(new Date).getMonth()+1;static _PRV_NOW_DAY=(new Date).getDate();static _init=(e,t)=>"number"==typeof e||null!=typeof e?"day"==t?e<33&&e>0?e:onday._PRV_NOW_DAY:e>0&&e<13?e:onday._PRV_NOW_MONTH:null;constructor(e,t){this.d=onday._init(e,"day"),this.m=onday._init(t,"month"),this.months={1:"Jan",2:"Feb",3:"Mar",4:"Apr",5:"May",6:"Jun",7:"Jul",8:"Aug",9:"Sep",10:"Oct",11:"Nov",12:"Dec"}}doy(e=onday._PRV_NOW_DAY,t=onday._PRV_NOW_MONTH){return new Promise((async(r,n)=>{try{const n=new Date,a=new Date(n.getFullYear(),t-1,e,1,0,1,0);let o=await Math.ceil((a-new Date(a.getFullYear(),0,1))/864e5);r({date:a,result:o})}catch(e){n(`Error 3: ${e}`)}}))}workoutdate(e=this.d,t=this.m){return new Promise(((r,n)=>{try{if("number"==typeof e&&"number"==typeof t)if(e<33&&e>0&t>0&&t<13){const n=new Date,a=new Date(n.getFullYear(),t-1,e);r(`passed in (${e}, ${t}) and ${n.getFullYear()} = ${a}
              ${this.months[t-1]}
              `)}else n("Number values out of range.");else n("Values of wrong type. Expecting numbers")}catch(e){n(e)}}))}check(t=this.d,r=this.m){return new Promise(((n,a)=>{(t=onday._init(t,"day"))&&(r=onday._init(r,"month"))||a("date value invalid"),e.get(`http://numbersapi.com/${r}/${t}/date`,(e=>{let t="";e.on("data",(e=>{t+=e})),e.on("end",(()=>{/title\>Error/.test(t)?a(`Error 3:${t}`):n(t)})),e.on("error",(e=>{a("Error 1:"+e)}))})).on("error",(e=>{a("Error 2: "+e.message)}))}))}}module.exports=onday;
