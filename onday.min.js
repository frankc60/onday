/**
 * onday v.2.4.49
 * Â©2020 ISC
 * frankc60@gmail.com 
 * git+https://github.com/frankc60/onday.git
 * Build time: 28-Nov-2020 17:17:51
 */
const t=require("http");class e{static _PRV_NOW_MONTH=(new Date).getMonth()+1;static _PRV_NOW_DAY=(new Date).getDate();static _PRV_NOW_YEAR=(new Date).getFullYear();constructor(t,s){this.d=!0===e.dateCheck(e._PRV_NOW_YEAR,s,t)?t:e._PRV_NOW_DAY,this.m=!0===e.dateCheck(e._PRV_NOW_YEAR,s,t)?s:e._PRV_NOW_MONTH,this.months={1:"Jan",2:"Feb",3:"Mar",4:"Apr",5:"May",6:"Jun",7:"Jul",8:"Aug",9:"Sep",10:"Oct",11:"Nov",12:"Dec"}}init(t,s){console.log(`init: datecheck returns: ${e.dateCheck(e._PRV_NOW_YEAR,s,t)} - this.d = ${this.d}, this.m = ${this.m}
onday._PRV_NOW_DAY = ${e._PRV_NOW_DAY}`)}static dateCheck=(t,e,s)=>{const r=new Date(t,+e-1,s);return 1==(Boolean(+r)&&r.getDate()==s&&e>0&&e<13)};getdate(t=this.d,s=this.m){return new Promise(((r,a)=>{if(e.dateCheck(e._PRV_NOW_YEAR,s,t)){let e;switch(t.toString().charAt(t.toString().length-1)){case"1":e="st";break;case"2":e="nd";break;case"3":e="rd";break;default:e="th"}r(`${t}${e} ${this.months[s]}`)}else a(`Date is invalid: ${t}-${s}-${e._PRV_NOW_YEAR}`)}))}check(s=this.d,r=this.m,a){return new Promise(((n,i)=>{e.dateCheck(e._PRV_NOW_YEAR,r,s)?a?setTimeout((function(t){n(`On ${t[r]} ${s} is the day something in history happened - mock data.`)}),1e3,this.months):t.get(`http://numbersapi.com/${r}/${s}/date`,(t=>{let e="";t.on("data",(t=>{e+=t})),t.on("end",(()=>{/title\>Error/.test(e)?i(`Error 3:  eee ddd
              test
              test2
              test3 ${e}`):n(e)})),t.on("error",(t=>{i("Error 1:  "+t)}))})).on("error",(t=>{i("Error 2: "+t.message)})):i(`Error: invalid date values (${s}, ${r})`)}))}}module.exports=e;
